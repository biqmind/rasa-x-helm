---
# Source: rasa-x/templates/rasa-deployments.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "my-rasa-rasa-worker"
  labels:
    helm.sh/chart: rasa-x-5.0.0
    app.kubernetes.io/name: rasa-x
    app.kubernetes.io/instance: my-rasa
    app.kubernetes.io/version: "1.4.0"
    app.kubernetes.io/managed-by: Helm
    
    app.kubernetes.io/component: rasa-worker
  annotations:
    sidecar.jaegertracing.io/inject: "false"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rasa-x
      app.kubernetes.io/instance: my-rasa
      app.kubernetes.io/component: rasa-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rasa-x
        app.kubernetes.io/instance: my-rasa
        app.kubernetes.io/component: rasa-worker
      annotations:
        checksum/rasa-config: dadffc02390322e4e5d5592660b3f444772497552ffcbcf5a437b53a841ea2e1
        checksum/rasa-secret: 75d433fb157f073545c80df3e395042fe6d6148095bfe8f4fc6441d0343c8a5b
    spec:
      hostNetwork: false
      dnsPolicy: ClusterFirst
      automountServiceAccountToken: false
      
      
      securityContext:
        fsGroup: 1000
      
      containers:
      - name: rasa-x
        image: 'europe-west3-docker.pkg.dev/rasa-releases/rasa-pro/rasa-pro:3.8.0'
        imagePullPolicy: Always
        ports:
        - name: "http"
          containerPort: 5005
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: /
            port: "http"
            scheme: HTTP
          initialDelaySeconds: 10
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /
            port: "http"
            scheme: HTTP
          initialDelaySeconds: 10
          failureThreshold: 10
        args:
        - x
        - --no-prompt
        - --production
        - --config-endpoint
        - http://my-rasa-rasa-x-rasa-x.default.svc:5002/api/config?token=$(RASA_X_TOKEN)
        - --port
        - "5005"
        - --jwt-method
        - HS256
        - --jwt-secret
        - "$(JWT_SECRET)"
        - --auth-token
        - "$(RASA_TOKEN)"
        - --cors
        - '*'
        
        env:
        - name: "MPLCONFIGDIR"
          value: "/tmp/.matplotlib"
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "my-rasa-postgresql"
              key: postgresql-password
        - name: "DB_DATABASE"
          value: worker_tracker
        - name: "RASA_X_TOKEN"
          valueFrom:
            secretKeyRef:
              name: my-rasa-rasa
              key: "rasaXToken"
        - name: "RASA_TOKEN"
          valueFrom:
            secretKeyRef:
              name: my-rasa-rasa
              key: "rasaToken"
        - name: "JWT_SECRET"
          valueFrom:
            secretKeyRef:
              name: my-rasa-rasa
              key: "jwtSecret"
        - name: "REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "my-rasa-redis"
              key: "redis-password"
        - name: "RABBITMQ_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "my-rasa-rabbit"
              key: "rabbitmq-password"
        - name: "RABBITMQ_QUEUE"
          value: "rasa_production_events"
        - name: "RASA_ENVIRONMENT"
          value: "worker"
        - name: "RASA_MODEL_SERVER"
          value: http://my-rasa-rasa-x-rasa-x.default.svc:5002/api/models/tags/production
        - name: "RASA_DUCKLING_HTTP_URL"
          value: http://my-rasa-rasa-x-duckling.default.svc:8000
        
        volumeMounts:
        # Mount the temporary directory for the Rasa global configuration
        - name: config-dir
          mountPath: /.config
      volumes:
      - name: config-dir
        emptyDir: {}
# this is needed to make it clear that these are two resources
